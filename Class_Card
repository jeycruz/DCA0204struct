#include <iostream>
#include <string>
#include <stdio.h>
#include <cstdlib>
#include <algorithm>
#include <list>


using namespace std;

class Card{
    public:
    string np;
    int valor;
    string str;
    char str1[10];
    string str2;
    Card (int naipe, int valor){
        if(naipe ==0){
            this->np="H";
        }
        if(naipe ==1){
            this->np="D";
        }
        if(naipe ==2){
            this->np="S";
        }
        if(naipe ==3){
            this->np="C";
        }
        //dps fazer opçao invalido, caso seja diferente dos demais, imprimi invalido e n permitir o avanço do programa
        this->valor=valor;
    }
    string toString(){
        str=np;
        itoa(valor,str1,10);
        str2=str.append(str1);
        return str2;
    }
};
/*
void print(const list<Card>& l) {
	list<Card>::const_iterator i;
	for( i = l.begin(); i != l.end(); i++)
		cout << *i << " ";
	cout << endl;
}
*/

int main()
{
    Card c0(0,1);
    /*Card c1(1,10);
    Card c2(2,11);
    Card c3(3,10);*/
    list<Card> l;
    l.insert(l.begin(),c0);
    //l.insert(l.begin,c1);
    //l.insert(l.begin,c2);
    //cout << "" << c0.toString() << " " << c1.toString() << " "<< c2.toString() << " " << c3.toString()<<endl;
    copy(l.begin(), l.end(), ostream_iterator<Card, char>(cout, " "));
    //cout<<endl;
    //print(l);



    return 0;
}
