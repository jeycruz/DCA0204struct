#include <iostream>
#include <sstream>
#include <string.h>
#include <stdio.h>
#include <stdlib.h>
#include <list>

using namespace std;

class Card {
  public:
    string np;
    int valor;
    string str;
    char str1[10];
    string str2;
    Card (int naipe, int valor) {
      if (naipe == 0) {
        this->np = "H";
      }
      if (naipe == 1) {
        this->np = "D";
      }
      if (naipe == 2) {
        this->np = "S";
      }
      if (naipe == 3) {
        this->np = "C";
      }
      this->valor = valor;
    }
    string toString() {
      str = np;
      itoa(valor, str1, 10);
      str2 = str.append(str1);
      return str2;

    }
};

class Deck
{
  private:
    std::list<Card> cl;
  public:
    Deck() {
      int i  = 1;
      for (int j = 1; j < 54; j++){
        if (j < 14){
          Card aux(0, j);
          cl.push_back(aux);
        }
        else if (j > 13 && j < 27) {
          Card aux(1, i);
          cl.push_back(aux);
          i++;
        }
        else if (j > 26 && j < 40)
        {
          if (i == 14)
          {
            i = 1;
          }
          Card aux(2, i);
          cl.push_back(aux);
          i++;
        }
        else if (j > 40)
        {
          if (i == 14)
          {
            i = 1;
          }
          Card aux(3, i);
          cl.push_back(aux);
          i++;
        }

      }

    }
    string toString(){
        stringstream rest;
        for(list<Card>::iterator itr = cl.begin();itr != cl.end();itr++){
            rest << (*itr).toString() << ", ";
        }
        return rest.str();
    }
    Card draw();
};


int main()
{
  Card c0(0, 1);
  Card c1(1, 10);
  Card c2(2, 11);
  Card c3(3, 13);
  cout << "" << c0.toString() << " " << c1.toString() << " " << c2.toString() << " " << c3.toString();
    Deck d;
    cout << d.toString() << endl;
  return 0;
}

